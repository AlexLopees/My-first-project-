-- INICIO DAS CONSULTAS SIMPLES --


--CONSULTAR SIMPLES PARA SABER TODOS OS REGISTROS DENTRO DA TABELA, PORÉM, NÃO É UMA BOA PRÁTICA

SELECT * FROM TB_PESSOA



--CONSULTAR AS 3 PRIMEIRAS PESSOAS CADASTRADAS

SELECT TOP 3 * FROM TB_PESSOA
ORDER BY DTCADASTRO



--CONSULTA SIMPLES PARA SABER OS TIPOS DE PRODUTOS E SEUS RESPECTIVOS VALORES

SELECT COD_PRODUTO,NOME_PRODUTO,VALOR
FROM TB_PRODUTO



--CONSULTA SIMPLES PARA RETORNAR OS NOMES EM ORDEM ALFABÉTICA NA ORDEM ASCENDENTE = CRESCENTE

SELECT NOME FROM TB_PESSOA 
ORDER BY NOME 


--TAMBÉM PODEMOS REALIZAR A CONSULTA PARA RETORNAR EM ORDEM DESCENDENTE = DECRESCENTE

SELECT NOME FROM TB_PESSOA
ORDER BY NOME DESC


--PODEMOS FAZER UMA CONSULTA ONDE MOSTRE OS VALORES DOS PRODUTOS A CIMA DE 100 REAIS

SELECT COD_PRODUTO, NOME_PRODUTO, VALOR FROM TB_PRODUTO
WHERE VALOR > 100


--TAMBÉM PODEMOS TRAZER PRODUTOS A BAIXO DE 10 REAIS 

SELECT COD_PRODUTO, NOME_PRODUTO, VALOR FROM TB_PRODUTO
WHERE VALOR < 10


--PODEMOS SABER  TODOS OS FUNCIONARIOS QUE FORAM CONTRATADOS NAS DATAS DE 01/01/2020 A 30/01/2020

SELECT * FROM TB_FUNCIONARIO
WHERE DTADMISSAO BETWEEN '2020-01-01' AND '2020-01-30'
ORDER BY DTADMISSAO



--CONSULTAR PESSOAS COM CÓDIGO 7 OU 10

SELECT * FROM TB_PESSOA
WHERE ID_PESSOA = 7 OR ID_PESSOA = 10



--AND TODAS AS CONDIÇÕES TEM QUE SER VERDADEIRAS

SELECT * FROM TB_PRODUTO
WHERE NOME_PRODUTO = 'ROSA VERMELHA'
	AND VALOR <= 10
	AND QTDE_ESTOQUE IN(150,300)



--CONSULTAR PESSOAS QUE POSSUAM CÓDIGO 2,3 E 5

SELECT * FROM TB_PESSOA
WHERE ID_PESSOA IN(2,3,5) 


--CONSULTAR TODOS OS FUNCIONARIOS QUE ESTÃO ATIVOS

SELECT 
	F.MATRICULA,
	P.NOME AS 'FUNCIONARIO',
	FUNC.DESCRICAO AS 'FUNCAO',
	F.SALARIO, 
	F.DTADMISSAO,

	CASE

		WHEN STATUS_FUNC = 'A'  THEN 'ATIVO'

	END 'STATUS FUNCIONÁRIO'

FROM TB_FUNCIONARIO AS F
	INNER JOIN TB_FUNCAO AS FUNC
		ON FUNC.ID_FUNC = F.FK_FUNCAO

	INNER JOIN TB_PESSOA AS P
		ON P.ID_PESSOA = F.FK_ID_PESSOA
WHERE STATUS_FUNC = 'A'


--RETORNA A QUANTIDADE DOS PRODUTOS EM ESTOQUE, E SE PRECISA DE REPOSIÇÃO OU NÃO

SELECT NOME_PRODUTO, QTDE_ESTOQUE,

	CASE

		WHEN QTDE_ESTOQUE <= 20 THEN 'PRECISA DE REPOSIÇÃO'
		ELSE 'ESTOQUE OK'

	END 'ESTOQUE'

FROM TB_PRODUTO 
ORDER BY NOME_PRODUTO

-- FIM DAS CONSULTAS SIMPLES --


/*--------------------------------------------------------//----------------------------------------------------------*/

-- INICO DAS CONSULTAS SIMPLES USANDO OPERADORES RELACIONAIS --

--CONSULTAR STATUS DIFERENTE DE ATIVO

SELECT  
	F.MATRICULA,
	P.NOME,
	FUNC.DESCRICAO AS 'FUNCAO',
	F.SALARIO, 
	F.DTADMISSAO,

	CASE

		WHEN STATUS_FUNC = 'I' THEN 'INATIVO'
		ELSE 'FÉRIAS'

	END 'STATUS DO FUNCIONÁRIO'

FROM TB_FUNCIONARIO AS F
	INNER JOIN TB_FUNCAO AS FUNC
		ON FUNC.ID_FUNC = F.FK_FUNCAO

	INNER JOIN TB_PESSOA AS P
		ON P.ID_PESSOA = F.FK_ID_PESSOA
WHERE STATUS_FUNC != 'A'


--TRAZER TODOS COM DATA DE ADMISSAO MAIOR OU IGUAL A DATA 01/01/2021

SELECT MATRICULA,DTADMISSAO,

	CASE 
		
		WHEN STATUS_FUNC = 'F' THEN 'FERIAS'
		ELSE 'ATIVO'

	END 'STATUS FUNCIONARIO'

FROM TB_FUNCIONARIO
WHERE DTADMISSAO >= '2021-01-01' 
AND NOT STATUS_FUNC = 'I'


--RETORNA TODOS OS VALORES DOS PRODUTOS ABAIXO DO VALOR DE 25 REAIS OU IGUAIS A 25 REAIS.

SELECT COD_PRODUTO,NOME_PRODUTO,VALOR
FROM TB_PRODUTO
WHERE VALOR <= 25 



--TRAZER TODOS FUNCIONARIOS CUJA A COLUNA DTDMISSAO ESTEJA NULA

SELECT MATRICULA,SALARIO,STATUS_FUNC,DTADMISSAO,DTDMISSAO
FROM TB_FUNCIONARIO
WHERE DTDMISSAO IS NULL



--TRAZER TODOS FUNCIONARIOS CUJA A COLUNA DTDMISSAO NÃO ESTEJA NULLA

SELECT MATRICULA,SALARIO,STATUS_FUNC,DTADMISSAO,DTDMISSAO
FROM TB_FUNCIONARIO
WHERE DTDMISSAO IS NOT NULL


--ESSA FUNÇÃO ELIMINA A DUPLICIDADE DE DADOS 

SELECT DISTINCT NOME_PRODUTO
FROM TB_PRODUTO


--ESSA FUNÇÃO INVERTE OS VALORES RETORNANDO APENAS FUNÇÕES DIFERENTE DE VENDEDOR E ESTATUS DIFERENTE DE INATIVO

SELECT 
	F.MATRICULA,
	P.NOME AS 'FUNCIONARIO',
	FUNC.DESCRICAO AS 'FUNCAO',
	F.SALARIO, 
	F.DTADMISSAO
FROM TB_FUNCIONARIO AS F
	INNER JOIN TB_FUNCAO AS FUNC
		ON FUNC.ID_FUNC = F.FK_FUNCAO

	INNER JOIN TB_PESSOA AS P
		ON P.ID_PESSOA = F.FK_ID_PESSOA
WHERE NOT FUNC.DESCRICAO = 'VENDEDOR' AND NOT STATUS_FUNC = 'I'



-- QUANTOS PRODUTOS TENHO CADASTRADO 

SELECT COUNT(*) AS [QTDE DE PRODUTOS] FROM TB_PRODUTO


-- FIM DAS CONSULTAS SIMPLES USANDO OPERADORES RELACIONAIS --